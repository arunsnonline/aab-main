<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
 	
    <context:annotation-config/>
    
    <!-- <context:component-scan base-package="com.adsandboards.web.dao.impl" />
    <context:component-scan base-package="com.adsandboards.web.dao.service" /> -->
    
    
    <tx:annotation-driven />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
		
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:./META-INF/persistence.xml"/>
        <property name="persistenceUnitName" value="JPAService"/>
    	<property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
                <!-- set extra properties here, e.g. for Hibernate: -->
            <props>
              <prop key="hibernate.dialect">${hibernate.dialect}</prop>
              <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
              <prop key="hibernate.cache.use_second_level_cache">true</prop>
              <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
            </props>
        </property>
    </bean>
    
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    
    
	
	<!-- Service -->
	<bean id="organizationService" class="com.adsandboards.web.service.impl.OrganizationServiceImpl"/>
	
    <bean id="userService" class="com.adsandboards.web.service.impl.UserServiceImpl"/>
    
    <bean id="countryService" class="com.adsandboards.web.service.impl.CountryServiceImpl"/>
	
	<bean id="accountService" class="com.adsandboards.web.service.impl.AccountServiceImpl"/>
	
	<bean id="stateService" class="com.adsandboards.web.service.impl.StateServiceImpl"/>
	
	<bean id="cityService" class="com.adsandboards.web.service.impl.CityServiceImpl"/> 
  
    <bean id="adBoardService" class="com.adsandboards.web.service.impl.AdBoardServiceImpl"/> 
	
	
	<!-- Dao -->
	<bean id="organizationDao" class="com.adsandboards.web.dao.impl.OrganizationDaoImpl"/>
	
	<bean id="countryDao" class="com.adsandboards.web.dao.impl.CountryDaoImpl"/>
	
	<bean id="accountDao" class="com.adsandboards.web.dao.impl.AccountDaoImpl"/>
	
	<bean id="stateDao" class="com.adsandboards.web.dao.impl.StateDaoImpl"/>
	
	<bean id="cityDao" class="com.adsandboards.web.dao.impl.CityDaoImpl"/>
	
	<bean id="userDao" class="com.adsandboards.web.dao.impl.UserDaoImpl"/>
  
    <bean id="adBoardDao" class="com.adsandboards.web.dao.impl.AdBoardDaoImpl"/>
	
	
	
	<!-- database related -->
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
	
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>
</beans>
